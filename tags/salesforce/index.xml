<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Salesforce on Seiri&#39;s Blog</title>
    <link>https://ryuseiri.github.io/tags/salesforce/</link>
    <description>Recent content in Salesforce on Seiri&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>2023 Seiri All rights reserved</copyright>
    <lastBuildDate>Tue, 12 Jul 2022 16:24:40 +0900</lastBuildDate><atom:link href="https://ryuseiri.github.io/tags/salesforce/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【Salesforce】Apexで選択リスト取得方法</title>
      <link>https://ryuseiri.github.io/posts/selection-list-acquisition-method-at-salesforce-apex/</link>
      <pubDate>Tue, 12 Jul 2022 16:24:40 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/selection-list-acquisition-method-at-salesforce-apex/</guid>
      <description>目的 Apexであるオブジェクトにある選択リスト項目の選択値を全部取得する方法を共有します。 実装 /** * 選択リストの項目値を取得 * @param {String} sObjectName オブジェク</description>
    </item>
    
    <item>
      <title>【Salesforce】アクションボタン</title>
      <link>https://ryuseiri.github.io/posts/salesforce-action-button/</link>
      <pubDate>Tue, 12 Jul 2022 16:09:43 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/salesforce-action-button/</guid>
      <description>目的 LWCのlightning-quick-action-panelモーダル画面の幅を調整できないため、 今回AuraとLWCでのアクションボ</description>
    </item>
    
    <item>
      <title>【Salesforce】FLS権限チェック</title>
      <link>https://ryuseiri.github.io/posts/salesforce-fls-authority-check/</link>
      <pubDate>Mon, 11 Jul 2022 20:02:42 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/salesforce-fls-authority-check/</guid>
      <description>目的 CRUD および項目レベルセキュリティ (FLS) 権限チェックUtilを作成方法を共有します ソース public with sharing class FLSUtil { //環境の接頭辞 private static final String ENV_PREFIX = getPrefix(); //アンダーバ</description>
    </item>
    
    <item>
      <title>【Salesforce】プラットフォームイベント説明と利用方法</title>
      <link>https://ryuseiri.github.io/posts/salesforce-platform-event-description-and-usage/</link>
      <pubDate>Mon, 11 Jul 2022 16:45:24 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/salesforce-platform-event-description-and-usage/</guid>
      <description>プラットフォームイベントの役割 プラットフォームイベントを使用し、リアルタイムイベントデータのやり取りによって、Salesforce のビジネス</description>
    </item>
    
    <item>
      <title>【Salesforce】データローダバッチ（エクスポート編）</title>
      <link>https://ryuseiri.github.io/posts/salesforce-data-loader-batch-export-edition/</link>
      <pubDate>Mon, 30 May 2022 19:45:23 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/salesforce-data-loader-batch-export-edition/</guid>
      <description>【Salesforce】データローダバッチ（インポート編） データローダ データローダは、データを一括でインポートまたはエクスポートするためのク</description>
    </item>
    
    <item>
      <title>【Salesforce】データローダバッチ（インポート編）</title>
      <link>https://ryuseiri.github.io/posts/salesforce-data-loader-batch-import-edition/</link>
      <pubDate>Mon, 30 May 2022 19:05:22 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/salesforce-data-loader-batch-import-edition/</guid>
      <description>【Salesforce】データローダバッチ（エクスポート編） データローダ データローダは、データを一括でインポートまたはエクスポートするための</description>
    </item>
    
    <item>
      <title>【Salesforce】LWCでのPath共通コンポーネント</title>
      <link>https://ryuseiri.github.io/posts/lwc-path-common-component/</link>
      <pubDate>Mon, 16 May 2022 14:11:39 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/lwc-path-common-component/</guid>
      <description>目的 LWCでのPath共通コンポーネントを共有します。 ソース path &amp;lt;template&amp;gt; &amp;lt;div class=&amp;#34;slds-path&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;slds-grid slds-path__track&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;slds-grid slds-path__scroller-container&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;slds-path__scroller&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;slds-path__scroller_inner&amp;#34;&amp;gt; &amp;lt;ul class=&amp;#34;slds-path__nav&amp;#34; role=&amp;#34;listbox&amp;#34; aria-orientation=&amp;#34;horizontal&amp;#34;&amp;gt; &amp;lt;template for:each={pathItemList} for:item=&amp;#34;pathItem&amp;#34; for:index=&amp;#34;index&amp;#34;&amp;gt; {getIndex} &amp;lt;template if:true={pathIndexGeCurrentIndex}&amp;gt; &amp;lt;li key={pathItem} if:true={pathIndexEqCurrentIndex} class=&amp;#34;slds-path__item slds-is-current slds-is-active&amp;#34; role=&amp;#34;presentation&amp;#34;&amp;gt; &amp;lt;a aria-selected=&amp;#34;true&amp;#34; class=&amp;#34;slds-path__link&amp;#34; href=&amp;#34;javasctipt:void();&amp;#34; role=&amp;#34;option&amp;#34; tabindex=&amp;#34;-1&amp;#34;&amp;gt; &amp;lt;span class=&amp;#34;slds-path__stage&amp;#34;&amp;gt;</description>
    </item>
    
    <item>
      <title>【Salesforce】LWC CSV出力方法</title>
      <link>https://ryuseiri.github.io/posts/salesforce-lwc-csv-output-method/</link>
      <pubDate>Tue, 29 Mar 2022 16:38:42 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/salesforce-lwc-csv-output-method/</guid>
      <description>1.目的 今回LWCでのCSVファイルを出力方法を共有します。 2.実装例 exportDataToCSVInLWC &amp;lt;template&amp;gt; &amp;lt;lightning-card title=&amp;#34;Export Data as CSV in Lightning Web Components&amp;#34; icon-name=&amp;#34;custom:custom63&amp;#34;&amp;gt; &amp;lt;template if:true={data}&amp;gt; &amp;lt;div class=&amp;#34;slds-p-around_medium lgc-bg-inverse&amp;#34;&amp;gt; &amp;lt;p&amp;gt;Do you want download data as a CSV format, Click Here &amp;amp;nbsp; &amp;lt;lightning-button icon-name=&amp;#34;utility:download&amp;#34; label=&amp;#34;Download as CSV&amp;#34; title=&amp;#34;Download</description>
    </item>
    
    <item>
      <title>【Salesforce】LWC Toastメッセージ共通Util</title>
      <link>https://ryuseiri.github.io/posts/salesforce-lwc-toast-message-common-util/</link>
      <pubDate>Tue, 21 Dec 2021 18:27:36 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/salesforce-lwc-toast-message-common-util/</guid>
      <description>1.目的 LWCでのToastメッセージ共通Utilを共有します。 2.実装 import { ShowToastEvent } from &amp;#39;lightning/platformShowToastEvent&amp;#39;; /** * メッセージ表示 * @param {window} that * @param {string} title タイトール * @param {string} message メッ</description>
    </item>
    
    <item>
      <title>【Salesforce】LWC 共通モーダル画面を作成</title>
      <link>https://ryuseiri.github.io/posts/creation-salesforce-lwc-common-modal-screen/</link>
      <pubDate>Mon, 29 Nov 2021 19:36:52 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/creation-salesforce-lwc-common-modal-screen/</guid>
      <description>目的 LWCでの共通モーダル画面を作成する方法を共通します ソース modal .slds-modal__content.slds-p-around_medium{ text-align: center !important; } &amp;lt;template&amp;gt; &amp;lt;!--Use template if:true to display/hide popup based on isModalOpen value--&amp;gt; &amp;lt;template if:true={_isModalOpen}&amp;gt; &amp;lt;!-- Modal/Popup Box LWC starts here --&amp;gt; &amp;lt;section role=&amp;#34;dialog&amp;#34; tabindex=&amp;#34;-1&amp;#34; aria-labelledby=&amp;#34;modal-heading-01&amp;#34; aria-modal=&amp;#34;true&amp;#34; class=&amp;#34;slds-modal slds-fade-in-open&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;slds-modal__container&amp;#34;&amp;gt; &amp;lt;!-- Modal/Popup Box LWC</description>
    </item>
    
    <item>
      <title>【Salesforce】Apex共通レスポンス基底クラス</title>
      <link>https://ryuseiri.github.io/posts/salesforce-apex-common-response-superclass/</link>
      <pubDate>Mon, 22 Nov 2021 17:18:13 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/salesforce-apex-common-response-superclass/</guid>
      <description>目的 LWCでApexクラスを呼出す基底クラスを作成する方法を紹介します。 LWCでApexクラスを呼出すときの返却値は主に正常系、警告系と異常</description>
    </item>
    
    <item>
      <title>ApexでAWS S3署名付きURL発行</title>
      <link>https://ryuseiri.github.io/posts/apex-create-aws-s3-sign-with-url/</link>
      <pubDate>Mon, 22 Nov 2021 16:48:56 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/apex-create-aws-s3-sign-with-url/</guid>
      <description>目的 ApexでS3署名付きURLを発行する方法を共用します。 ソース public class AwsS3Util { private static final String AMZ_ALGORITHM = &amp;#39;AWS4-HMAC-SHA256&amp;#39;; private static final String ACCESS_KEY = &amp;#39;アクセスキー&amp;#39;; private static final</description>
    </item>
    
    <item>
      <title>Apex REST API Callouts Util作成</title>
      <link>https://ryuseiri.github.io/posts/apex-rest-api-callouts-util-creation/</link>
      <pubDate>Mon, 22 Nov 2021 16:41:02 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/apex-rest-api-callouts-util-creation/</guid>
      <description>1.目的 Apex REST Callouts Utilを作成します。 2.ソース public class CalloutUtil{ /**リクエストメソッド */ private enum RequestMethod { GET, POST, PUT } /** * GET請求を出す * @param {String} url URL * @param {Map} mapHeader ヘッダー</description>
    </item>
    
    <item>
      <title>LWCでのファイルダウンロード</title>
      <link>https://ryuseiri.github.io/posts/file-download-in-lwc/</link>
      <pubDate>Mon, 02 Aug 2021 18:36:58 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/file-download-in-lwc/</guid>
      <description>目的 LWCでのファイルダウンロード方法を共有します。 ソース構成図 force-app └─main └─default ├─classes │ ├─GetFileDem</description>
    </item>
    
    <item>
      <title>LWCでのファイル一括ダウンロード方法</title>
      <link>https://ryuseiri.github.io/posts/lwc-file-bulk-download/</link>
      <pubDate>Mon, 02 Aug 2021 10:57:14 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/lwc-file-bulk-download/</guid>
      <description>目的 今回ClassicモードでVisualforceにLWCのでファイル一括ダウンロードする方法を共有します。 前提 jszip.jsを静的リソ</description>
    </item>
    
    <item>
      <title>VFPageにLWCでのファイルUP方法</title>
      <link>https://ryuseiri.github.io/posts/vfpage-lwc-on-file-up/</link>
      <pubDate>Thu, 29 Jul 2021 16:30:01 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/vfpage-lwc-on-file-up/</guid>
      <description>1.目的 Salesforce Lightningモード下にLWCでのファイルをアップロードするには&amp;lt;lightning-file-upload&amp;gt;コン</description>
    </item>
    
    <item>
      <title>【Salesforce】VFページにLWCを表示する方法</title>
      <link>https://ryuseiri.github.io/posts/salesforce-vfpage-display-lwc/</link>
      <pubDate>Wed, 28 Jul 2021 14:42:39 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/salesforce-vfpage-display-lwc/</guid>
      <description>目的 LWCををVFページに表示する方法を紹介します。 基本的な考え方はVFページにLightningOutという仕組みを利用して、LWCを表示</description>
    </item>
    
    <item>
      <title>LWCでAWS S3と連携する方法</title>
      <link>https://ryuseiri.github.io/posts/lwc-by-aws-3-and-operation/</link>
      <pubDate>Wed, 28 Jul 2021 13:02:56 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/lwc-by-aws-3-and-operation/</guid>
      <description>1.目的 今回LWC中にAWSのSDK for javascriptでS3と連携する方法を共有します。 2.前提 2.1.AWS S3バケットCross-Origin Resource</description>
    </item>
    
    <item>
      <title>LWCでのDatePicker自分で作る</title>
      <link>https://ryuseiri.github.io/posts/lwc-on-datepicker-myself-with-make/</link>
      <pubDate>Mon, 26 Jul 2021 14:49:28 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/lwc-on-datepicker-myself-with-make/</guid>
      <description>1.目的 LWCでのDatePickerの作成方法を共有します。 2.ソース構成図 lwc ├─datePicker └─datePickerContai</description>
    </item>
    
    <item>
      <title>LWCでの共通Util自分で作る</title>
      <link>https://ryuseiri.github.io/posts/lwc-on-common-util-myself-with-make/</link>
      <pubDate>Mon, 26 Jul 2021 10:52:54 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/lwc-on-common-util-myself-with-make/</guid>
      <description>1.目的 今回LWCでの共通Utilの作成方法を共有します。 2.ソース構成図 lwc ├─commonUtil └─commonUtilChild commonUtil /** *</description>
    </item>
    
    <item>
      <title>LWCでの共通CSS</title>
      <link>https://ryuseiri.github.io/posts/lwc-common-css/</link>
      <pubDate>Mon, 26 Jul 2021 10:30:25 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/lwc-common-css/</guid>
      <description>目的 今回LWCでの共通スタイルシート(CSS)の方法を共有します。 ソース構成図 lwc ├─commonStyle └─commonStyleChil</description>
    </item>
    
    <item>
      <title>LWCでのStyling Hooks</title>
      <link>https://ryuseiri.github.io/posts/lwc-styling-hooks/</link>
      <pubDate>Wed, 21 Jul 2021 19:17:39 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/lwc-styling-hooks/</guid>
      <description>1.目的 今回Lighting Desigin Systemで提供された標準デザインを変えようと思います。 基本的にはスタイルフックを使って、標準のデザインを変</description>
    </item>
    
    <item>
      <title>LWCでの再帰的なコンポーネント自分で作る</title>
      <link>https://ryuseiri.github.io/posts/lwc-on-recursive-component-myself-with-make/</link>
      <pubDate>Wed, 21 Jul 2021 18:36:08 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/lwc-on-recursive-component-myself-with-make/</guid>
      <description>1.目的 ReactやVueでのコンポネント必要に応じて、時々共通処理のため、再帰的なコンポネントを実装したことがありますが、今回LWCでの再</description>
    </item>
    
    <item>
      <title>LWC GroupButtonコンポーネント自分で作る</title>
      <link>https://ryuseiri.github.io/posts/create-lwc-groupbutton-component-self/</link>
      <pubDate>Mon, 19 Jul 2021 19:28:25 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/create-lwc-groupbutton-component-self/</guid>
      <description>1.目的 LWCでのループ回す方法は&amp;lt;template for:eatch={items} for:item=&amp;quot;item&amp;quot; for:index=&amp;quot;idx&amp;quot;&amp;gt;ですが、但しタグ中に</description>
    </item>
    
    <item>
      <title>LWC Calendarコンポーネント自分で作る</title>
      <link>https://ryuseiri.github.io/posts/create-lwc-calendar-component-self/</link>
      <pubDate>Mon, 19 Jul 2021 17:29:18 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/create-lwc-calendar-component-self/</guid>
      <description>1.目的 LWCに既存のカレンダーコンポーネントでは&amp;lt;lighting-input type=&amp;quot;date&amp;quot;&amp;gt;&amp;l</description>
    </item>
    
    <item>
      <title>LWC ContextMenuコンポーネント自分で作る</title>
      <link>https://ryuseiri.github.io/posts/create-lwc-contextmenu-component-self/</link>
      <pubDate>Mon, 19 Jul 2021 11:26:55 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/create-lwc-contextmenu-component-self/</guid>
      <description>1.目的 今回LWCでContextMenuコンポーネントを作成しようと思います、 基本的な考え方は右クリックをすると、カーソルの座標を取得し、</description>
    </item>
    
    <item>
      <title>【Salesforce】LWC Router</title>
      <link>https://ryuseiri.github.io/posts/salesforce-lwc-router/</link>
      <pubDate>Fri, 16 Jul 2021 17:30:12 +0900</pubDate>
      
      <guid>https://ryuseiri.github.io/posts/salesforce-lwc-router/</guid>
      <description>目的 今回自分で開発したSalesforce側使えるLWCでの画面遷移方法を紹介します。 構成図 lwc ├─router ├─myRouterConta</description>
    </item>
    
  </channel>
</rss>
